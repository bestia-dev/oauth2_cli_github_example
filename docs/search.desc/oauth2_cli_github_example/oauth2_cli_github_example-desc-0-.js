searchState.loadedDescShard("oauth2_cli_github_example", 0, "oauth2_cli_github_example\ndecrypt crates.io api token from file or ask the user to …\ngeneric functions to encrypt and decrypt secrets using the …\ndecrypt github api token from file or use the oauth2 …\nThis is all just an example. In the main() function I must …\nget crates.io secret token\nANSI color\nStruct that represents the json data saved in the ‘*.enc…\nANSI color\nANSI color\nANSI color\nANSI color\nDecode base64 from string to 32bytes\nDecode base64 from string to string\nDecrypts plain_encrypted_string with …\nDecode base64 from string to 32bytes\nEncode base64 from bytes to string\nEncode base64 from string to string\nEncrypts symmetrically secret_string_to_encrypt with …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGet the string from the file that is base64 encoded\nGenerate a random seed\nshorten the <code>Vec&lt;u8&gt; to [u8;32]</code>\nSign the seed with the private key into 32 bytes secret\nSign seed with ssh-agent into 32 bytes secret\nReturns the secret signed seed\nOauth2 device workflow needs to be authenticated with a …\ndecrypt file\nencrypt and save file\nReturns the argument unchanged.\nStart the github oauth2 device workflow It will use the …\nCalls <code>U::from(self)</code>.\nget the file json with expiration dates\nuse refresh token to get new access_token and refresh_token\nSign seed with ssh-agent\nUser must input the passphrase to unlock the private key …")